AWSTemplateFormatVersion: "2010-09-09"
Description: "Construct an application to send data from firehose to Splunk."
Parameters:
  S3bucketArn:
    Type: "String"
  OutputLogGroup:
    Type: "String"
  HECEndpointURL:
    Type: "String"
  HECToken:
    Type: "String"
  ProcessingLambdaArn:
    Type: "String"
Resources:
  deliverystream:
    DependsOn:
      - deliveryPolicy
    Type: "AWS::KinesisFirehose::DeliveryStream"
    Properties:
      DeliveryStreamName: !Sub "${AWS::StackName}"
      DeliveryStreamType: "DirectPut"
      SplunkDestinationConfiguration:
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref OutputLogGroup
          LogStreamName: !Sub "${AWS::StackName}"
        HECAcknowledgmentTimeoutInSeconds: 180
        HECEndpoint: !Ref HECEndpointURL
        HECEndpointType: "Raw"
        HECToken: !Ref HECToken
        ProcessingConfiguration:
          Enabled: "true"
          Processors:
            - Parameters:
                - ParameterName: "LambdaArn"
                  ParameterValue: !Ref ProcessingLambdaArn
                - ParameterName: "RoleArn"
                  ParameterValue: !GetAtt deliveryRole.Arn
              Type: "Lambda"
        RetryOptions:
          DurationInSeconds: 120
        S3BackupMode: "AllEvents"
        S3Configuration:
          BucketARN: !Ref S3bucketArn
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 1
          CompressionFormat: "UNCOMPRESSED"
          Prefix: !Sub "${AWS::AccountId}/${AWS::StackName}/"
          RoleARN: !GetAtt deliveryRole.Arn
  deliveryRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "firehose.amazonaws.com"
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                sts:ExternalId: !Ref AWS::AccountId
  deliveryPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "Permissions-Policy-For-Firehose"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "s3:AbortMultipartUpload"
              - "s3:Get*"
              - "s3:Put*"
              - "s3:List*"
              - "s3:PutObjectAcl"
              - "s3:PutObjectVersionAcl"
            Resource:
              - !Ref S3bucketArn
              - !Sub "${S3bucketArn}/*"
          - Effect: "Allow"
            Action:
              - "logs:CreateLog*"
              - "logs:PutLogEvents"
              - "logs:Describe*"
            Resource: "*"
          - Effect: "Allow"
            Action:
              - "firehose:PutRecord"
              - "firehose:PutRecordBatch"
            Resource: !Sub "arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/${AWS::StackName}"
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
              - "lambda:GetFunctionConfiguration"
            Resource: !Ref ProcessingLambdaArn
      Roles:
        - !Ref deliveryRole
